@{
    Layout = null;
    var widgetId = ViewBag.WidgetId;
}

<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="utf-8" />
    <title>Rozmowa z obsługą</title>

    <!-- Bootstrap + SignalR -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
</head>
<body class="bg-light">

    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6">

                <div class="card shadow-sm">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">Czat z obsługą</h5>
                    </div>
                    <div class="card-body" style="height: 300px; overflow-y: auto;" id="chatBox">
                        <!-- Wiadomości pojawią się tutaj -->
                    </div>
                    <div class="card-footer">
                        <div class="input-group">
                            <input type="text" id="messageInput" class="form-control" placeholder="Napisz wiadomość..." />
                            <button class="btn btn-primary" onclick="sendMessage()">Wyślij</button>
                        </div>
                    </div>
                </div>

                @if (ViewBag.ConversationId != null)
                {
                    <form asp-action="Close" method="post" class="text-center mt-3">
                        <input type="hidden" name="id" value="@ViewBag.ConversationId" />
                        <button class="btn btn-outline-danger" type="submit">
                            Zakończ rozmowę
                        </button>
                    </form>
                }
            </div>
        </div>
    </div>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        const conversationId = "@ViewBag.ConversationId";

        connection.start().then(() => {
            connection.invoke("JoinConversation", conversationId);
        });

        connection.on("ReceiveMessage", (user, message) => {
            const container = document.getElementById("chatBox");

            const msgDiv = document.createElement("div");
            msgDiv.classList.add("mb-2");

            const nameSpan = document.createElement("strong");
            nameSpan.innerText = user + ": ";
            msgDiv.appendChild(nameSpan);

            const textSpan = document.createElement("span");
            textSpan.innerText = message;
            msgDiv.appendChild(textSpan);

            container.appendChild(msgDiv);
            container.scrollTop = container.scrollHeight;

            connection.invoke("MarkAsRead", conversationId, null);
        });

        connection.on("ConversationClosed", function (id) {
            if (id === conversationId) {
                alert("Rozmowa została zakończona przez drugą stronę.");

                // Dezaktywuj pole i przycisk
                document.getElementById("messageInput").disabled = true;
                document.querySelector("button[onclick='sendMessage()']").disabled = true;

                const chatBox = document.getElementById("chatBox");
                const infoDiv = document.createElement("div");
                infoDiv.classList.add("text-center", "text-muted", "mt-3");
                infoDiv.textContent = "Rozmowa została zakończona.";
                chatBox.appendChild(infoDiv);
            }
        });

        function sendMessage() {
            const input = document.getElementById("messageInput");
            const msg = input.value.trim();
            if (msg) {
                connection.invoke("SendMessage", conversationId, "Gość", msg);
                input.value = "";
            }
        }
    </script>

</body>
</html>
